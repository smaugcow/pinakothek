openapi: 3.0.0
info:
  version: 1.0.0
  title: Pinakothek Media Service
  description: Web application for uploading, storing, and viewing photo and video content.

servers:
  - url: /api/v1
    description: Production server (uses https)

paths:
  /auth/register/:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for registration
                password:
                  type: string
                  format: password
                  description: Password for registration
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Bad request

  /auth/login/:
    post:
      summary: Login as an existing user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username for login
                password:
                  type: string
                  format: password
                  description: Password for login
      responses:
        '200':
          description: User successfully logged in
        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /auth/forgot_password/:
    post:
      summary: Send password reset instructions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email address for password reset
      responses:
        '200':
          description: Password reset instructions sent
        '400':
          description: Bad request

  /media/:
    get:
      summary: Get paginated media content
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            description: Number of items per page
      responses:
        '200':
          description: List of media content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaItem'
        '400':
          description: Bad request

    post:
      summary: Upload new media content
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Media file to upload
                description:
                  type: string
                  description: Description of the uploaded content
      responses:
        '201':
          description: Media uploaded successfully
        '400':
          description: Bad request

  /media/edit_photo/:
    put:
      summary: Edit photo details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItem'
      responses:
        '200':
          description: Photo details updated
        '400':
          description: Bad request


  /media/edit_video/:
    put:
      summary: Edit video details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaItem'
      responses:
        '200':
          description: Video details updated
        '400':
          description: Bad request

  /account/:
    get:
      summary: Get user account details
      responses:
        '200':
          description: User account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /admin/:
    get:
      summary: Get admin panel details
      responses:
        '200':
          description: Admin panel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminPanel'
        '401':
          description: Unauthorized
        '403':
          description: Access forbidden

components:
  schemas:
    MediaItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the media content
        filename:
          type: string
          description: Name of the media file
        description:
          type: string
          description: Description of the media content
        upload_date:
          type: string
          format: date-time
          description: Date and time of upload

    UserAccount:
      type: object
      properties:
        username:
          type: string
          description: User's username
        email:
          type: string
          format: email
          description: User's email address
        // Add more properties as needed for user account details

    AdminPanel:
      type: object
      properties:
        // Define properties for admin panel details
        // Add as per requirements
